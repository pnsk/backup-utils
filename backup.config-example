# GitHub Enterprise backup configuration file

# The hostname of the GitHub Enterprise appliance to back up. The host
# must be reachable via SSH from the backup host.
GHE_HOSTNAME="github.example.com"

# Path to where backup data is stored. By default this is the "data"
# directory next to this file but can be set to an absolute path
# elsewhere for backing up to a separate partition / mount point.
GHE_DATA_DIR="data"

# The number of backup snapshots to retain. Old snapshots are pruned after each
# successful ghe-backup run. This option should be tuned based on the frequency
# of scheduled backup runs. If backups are scheduled hourly, snapshots will be
# available for the past N hours; if backups are scheduled daily, snapshots will
# be available for the past N days ...
GHE_NUM_SNAPSHOTS=10

# The hostname of the GitHub appliance to restore. If you've set up a separate
# GitHub appliance to act as a standby for recovery, specify its IP or hostname
# here. The host to restore to may also be specified directly when running
# ghe-restore so use of this variable isn't strictly required.
#
#GHE_RESTORE_HOST="github-standby.example.com"

# Any extra options passed to the SSH command.  Nothing required by default
#
#GHE_EXTRA_SSH_OPTS=""

# Add s3 bucket for configuring which bucket to use in ghe-s3-backup and
# ghe-s3-restore
# GHE_S3_BUCKET=""
#
#

MAILADDR="root@localhost"

# Rsync backup bandwidth limit
BLIMIT=85
# # Rsync restore bandwidth limit
RLIMIT=85

if [ ${BLIMIT-0} -ne 0 ]; then
       B=`echo "scale=5; $BLIMIT / 8 * 1024" | bc | awk -F. '{print $1}'`
       BK_LIMIT="--bwlimit=$B"
else
       BK_LIMIT=""
fi

if [ ${RLIMIT-0} -ne 0 ]; then
       R=`echo "scale=5; $RLIMIT / 8 * 1024" | bc | awk -F. '{print $1}'`
       RESTORE_LIMIT="--bwlimit=$R"
else
       RESTORE_LIMIT=""
fi
